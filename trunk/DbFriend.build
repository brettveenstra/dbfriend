<?xml version="1.0" ?>
<project name="DbFriend" default="test" xmlns="http://nant.sf.net/schemas/nant.xsd">

  <property name="nant.settings.currentframework" value="net-3.5" />
  <property name="SetupdbConfig.connectionstring" value="-E -S localhost"/>
  <property name="sql.tools.path" value="C:\Program Files\Microsoft SQL Server\100\tools\binn"/>
  <property name="sql.command.runner" value="osql.exe"/>
  <property name="osql.exe" value="${sql.tools.path}\${sql.command.runner}"/>

  <property name="base.dir" value="${project::get-base-directory()}" />
  <property name="build.dir" value="${base.dir}\build" />
  <property name="build.sql.dir" value="${build.dir}\db-setup"/>
  <property name="db.timestamp" value="${build.sql.dir}\db.timestamp"/>
  <property name="integration.db.needs.setup" value="false" />
  <property name="build.dir.drop" value="${build.dir}\Debug" />
  <property name="test-runner.exe" value="${base.dir}\tools\gallio\gallio.echo.exe" />

  <fileset id="integration.db.creation.files">
    <include name="${build.sql.dir}\CreateDB.sql" />
    <include name="${build.sql.dir}\CreateUser.sql" />
  </fileset>
  
  <fileset id="integration.db.setup.shell.files">
    <include name="${build.sql.dir}\0000001.sql" />
    <include name="${build.sql.dir}\0000002.sql" />
    <include name="${build.sql.dir}\0000003.sql" />
    <include name="${build.sql.dir}\0000004.sql" />
    <include name="${build.sql.dir}\0000005.sql" />
  </fileset>
  
  <!-- User targets -->
	<target name="clean" description="Delete Automated Build artifacts">
		<delete dir="${build.dir.drop}" if="${directory::exists(build.dir.drop)}"/>
	</target>

	<target name="compile" description="Compiles using the AutomatedDebug Configuration">
		<msbuild project="src\DbFriend.sln">
			<property name="Configuration" value="AutomatedDebug" />
		</msbuild>
	</target>

	<target name="test" depends="compile, run-unit-tests" 
		description="Compile and Run Tests" />
		
	<target name="full" depends="clean, test, dist"	description="Compiles, tests, and produces distributions" />

	<!-- Internal targets -->
	<target name="run-unit-tests" depends="setup.integration.db">
    <property name="test-runner.exe.args" value='/wd:. /rd:${build.dir}\test-reports /rt:XML /rnf:Coverage /r:NCover /rp:NCoverArguments="/eas Gallio" "DbFriend.Testing.dll"' />
    <echo message="Working dir: [${build.dir.drop}\UnitTests]" />
    <echo message="Args: [${test-runner.exe.args}]" />
    <mkdir dir="${build.dir}\test-reports" />
		<exec program="${test-runner.exe}" workingdir="${build.dir.drop}\UnitTests">
      <arg line="${test-runner.exe.args}"/>
    </exec>
	</target>
	
	<target name="dist">
		<echo message="Copying files from [${build.dir.drop}\DbFriendShell] to [${build.dir}\dist]" />
		<copy todir="${build.dir}\dist">
			<fileset basedir="${build.dir.drop}\DbFriendShell">
				<include name="**\*"/>
				<exclude name="**\*.pdb" />
			</fileset>
		</copy>
		<zip zipfile="${build.dir}\DbFriend.zip">
			<fileset basedir="${build.dir}\dist">
				<include name="**\*" />
			</fileset>
		</zip>
	</target>

  <target name="setup.integration.db" depends="check.integration.db.needs.setup">
    <if test="${integration.db.needs.setup}">
      <echo message="Running integration DB setup"/>
      <call target="_build.db" cascade="false" />
    </if>
    <touch file="${db.timestamp}" />
  </target>

  <target name="check.integration.db.needs.setup">
    <echo message="Checking if IntegrationDB needs to be setup"/>
    <property name="integration.db.needs.setup" value="false" />
    <uptodate property="integration.db.needs.setup">
      <sourcefiles>
        <include name="${db.timestamp}" />
      </sourcefiles>
      <targetfiles>
        <include name="${build.sql.dir}\*.sql"/>
      </targetfiles>
    </uptodate>
  </target>

  <target name="_build.db">
    <foreach item="File" property="target">
      <in>
        <items refid="integration.db.creation.files"/>
      </in>
      <do>
        <call target="run.sql.file.nodb" />
      </do>
    </foreach>

    <foreach item="File" property="target">
      <in>
        <items refid="integration.db.setup.shell.files"/>
      </in>
      <do>
        <call target="run.sql.file" />
      </do>
    </foreach>
  </target>

  <target name="run.sql.file.nodb">
    <echo message="Executing ${target}" />
    <exec program="${osql.exe}"
          workingdir="${build.sql.dir}"
          commandline='${SetupdbConfig.connectionstring} -n -b -i "${target}"' />
  </target>

  <target name="run.sql.file">
    <echo message="Executing ${target}" />
    <exec program="${osql.exe}"
          workingdir="${build.sql.dir}"
          commandline='${SetupdbConfig.connectionstring} -n -d dbFriend_IntegrationTest -b -i "${target}"' />
  </target>

</project>

